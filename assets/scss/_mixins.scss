
@import "../../node_modules/bootstrap/scss/_functions.scss";
@import "../../node_modules/bootstrap/scss/_variables.scss";
@import "../../node_modules/bootstrap/scss/mixins/_breakpoints.scss";

%grid-column {
  padding-right: ($grid-gutter-width-custom / 2);
  padding-left: ($grid-gutter-width-custom / 2);
}

@mixin make-grid-columns-custom($columns: $grid-columns, $breakpoints: $grid-breakpoints) {
  @each $breakpoint in map-keys($breakpoints) {
    $infix: breakpoint-infix($breakpoint, $breakpoints);

    @for $i from 1 through $columns {
      .col#{$infix}-#{$i} {
        @extend %grid-column;
      }
    }
    .col#{$infix},
    .col#{$infix}-auto {
      @extend %grid-column;
    }    
  }
}

@mixin make-container-custom() {
  @extend %grid-column;
}

@mixin make-row-custom() {
  margin-right: ($grid-gutter-width-custom / -2);
  margin-left: ($grid-gutter-width-custom / -2);
}

@mixin make-col-ready-custom() {
  @extend %grid-column;
}

@mixin translate3d($x, $y, $z) {
  -ms-transform: translate3d($x, $y, $z);
  -webkit-transform: translate3d($x, $y, $z);
  transform: translate3d($x, $y, $z);
}

@mixin make-max-widths-container-width-custom($max-widths: $container-max-widths-custom, $breakpoints: $grid-breakpoints) {
  @each $breakpoint, $container-max-width in $max-widths {
    @include media-breakpoint-up($breakpoint, $breakpoints) {
        max-width: $container-max-width;
    }
  }
}
